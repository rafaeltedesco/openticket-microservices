version: "3.8"

services:
  main:
    container_name: main
    build:
      context: ./main/.
    env_file:
      - ./main/.env
    tty: true
    stdin_open: true
    ports:
      - 3001:3001
    working_dir: /app
    volumes:
      - ./main/src:/app/src
    depends_on:
      - database
      - redis

  api_gateway:
    container_name: api_gateway
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - 3333:3333
    environment:
      - KAFKA_HOST=kafka:29092
      - CORE_HOST=main:3001
    tty: true
    stdin_open: true
    volumes:
      - ./api_gateway/:/app
    depends_on:
      - kafka

  orders_pubsub:
    container_name: orders_pubsub
    build:
      context: ./orders_pubsub
      dockerfile: Dockerfile
    environment:
      - KAFKA_HOST=kafka:29092
      - DB_HOST=database
    tty: true
    stdin_open: true
    volumes:
      - ./orders_pubsub/:/app
    depends_on:
      - kafka

  database:
    image: postgres:12.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - 5432:5432
    volumes:
      - ./database_volume:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: "false"
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    
  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
